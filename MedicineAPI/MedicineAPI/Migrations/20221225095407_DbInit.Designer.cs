// <auto-generated />
using System;
using MedicineAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MedicineAPI.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20221225095407_DbInit")]
    partial class DbInit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MedicineAPI.Data.DetailPrescription", b =>
                {
                    b.Property<Guid>("idDetailPrescription")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("contentDetailPrescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("hourDetailPrescription")
                        .HasColumnType("int");

                    b.Property<Guid?>("idMedicine")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("idPrescription")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("minuteDetailPrescription")
                        .HasColumnType("int");

                    b.Property<double>("quantityDetailPrescription")
                        .HasColumnType("float");

                    b.HasKey("idDetailPrescription");

                    b.ToTable("DetailPrescription");
                });

            modelBuilder.Entity("MedicineAPI.Data.DrUser", b =>
                {
                    b.Property<Guid>("idDrUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("emailDrUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fullNameDrUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nameDrUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("passwordDrUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phoneDrUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idDrUser");

                    b.ToTable("DrUser");
                });

            modelBuilder.Entity("MedicineAPI.Data.Medicine", b =>
                {
                    b.Property<Guid>("idMedicine")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("descriptionMedicine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("idType")
                        .HasColumnType("int");

                    b.Property<string>("nameMedicine")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idMedicine");

                    b.ToTable("Medicine");
                });

            modelBuilder.Entity("MedicineAPI.Data.Prescription", b =>
                {
                    b.Property<Guid>("idPrescription")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("datePrescription")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("idDrUser")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("idPrescription");

                    b.ToTable("Prescription");
                });

            modelBuilder.Entity("MedicineAPI.Data.Type", b =>
                {
                    b.Property<int>("idType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nameType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idType");

                    b.ToTable("Type");
                });

            modelBuilder.Entity("MedicineAPI.Data.User", b =>
                {
                    b.Property<Guid>("idUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("emailUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fullNameUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nameUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("passwordUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idUser");

                    b.ToTable("User");
                });
#pragma warning restore 612, 618
        }
    }
}
